/*
 * OpenAPI Schema for Salesforce Functions invocation contexts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.salesforce.functions.context;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Extra response out-of-band information returned from function invocation
 */
@ApiModel(description = "Extra response out-of-band information returned from function invocation")
@JsonPropertyOrder({
  ResponseExtraInfo.JSON_PROPERTY_REQUEST_ID,
  ResponseExtraInfo.JSON_PROPERTY_RESOURCE,
  ResponseExtraInfo.JSON_PROPERTY_SOURCE,
  ResponseExtraInfo.JSON_PROPERTY_EXEC_TIME_MS,
  ResponseExtraInfo.JSON_PROPERTY_STATUS_CODE,
  ResponseExtraInfo.JSON_PROPERTY_IS_FUNCTION_ERROR,
  ResponseExtraInfo.JSON_PROPERTY_STACK
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-11T09:34:01.344279-07:00[America/Denver]")
public class ResponseExtraInfo {
  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private String resource;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_EXEC_TIME_MS = "execTimeMs";
  private BigDecimal execTimeMs;

  public static final String JSON_PROPERTY_STATUS_CODE = "statusCode";
  private Integer statusCode;

  public static final String JSON_PROPERTY_IS_FUNCTION_ERROR = "isFunctionError";
  private Boolean isFunctionError;

  public static final String JSON_PROPERTY_STACK = "stack";
  private String stack;

  public ResponseExtraInfo() { 
  }

  public ResponseExtraInfo requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Unique function request identifier
   * @return requestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unique function request identifier")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public ResponseExtraInfo resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Resource identifier of function being invoked
   * @return resource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Resource identifier of function being invoked")
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResource() {
    return resource;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResource(String resource) {
    this.resource = resource;
  }


  public ResponseExtraInfo source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Source path:line number if possible to fill in on error, null/undefined otherwise
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source path:line number if possible to fill in on error, null/undefined otherwise")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public ResponseExtraInfo execTimeMs(BigDecimal execTimeMs) {
    this.execTimeMs = execTimeMs;
    return this;
  }

   /**
   * Execution time in milliseconds, may include fractional millis after decimal point
   * @return execTimeMs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Execution time in milliseconds, may include fractional millis after decimal point")
  @JsonProperty(JSON_PROPERTY_EXEC_TIME_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getExecTimeMs() {
    return execTimeMs;
  }


  @JsonProperty(JSON_PROPERTY_EXEC_TIME_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecTimeMs(BigDecimal execTimeMs) {
    this.execTimeMs = execTimeMs;
  }


  public ResponseExtraInfo statusCode(Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * HTTP status code of response: 200-599, -1 if non-HTTP error encountered.
   * @return statusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "HTTP status code of response: 200-599, -1 if non-HTTP error encountered.")
  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStatusCode() {
    return statusCode;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusCode(Integer statusCode) {
    this.statusCode = statusCode;
  }


  public ResponseExtraInfo isFunctionError(Boolean isFunctionError) {
    this.isFunctionError = isFunctionError;
    return this;
  }

   /**
   * Flag set to true if error encountered in function code, false if other error, null/undefined if no error
   * @return isFunctionError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag set to true if error encountered in function code, false if other error, null/undefined if no error")
  @JsonProperty(JSON_PROPERTY_IS_FUNCTION_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsFunctionError() {
    return isFunctionError;
  }


  @JsonProperty(JSON_PROPERTY_IS_FUNCTION_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsFunctionError(Boolean isFunctionError) {
    this.isFunctionError = isFunctionError;
  }


  public ResponseExtraInfo stack(String stack) {
    this.stack = stack;
    return this;
  }

   /**
   * Language-specific error stack trace to help developer diagnose issues, null/undefined if no error
   * @return stack
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Language-specific error stack trace to help developer diagnose issues, null/undefined if no error")
  @JsonProperty(JSON_PROPERTY_STACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStack() {
    return stack;
  }


  @JsonProperty(JSON_PROPERTY_STACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStack(String stack) {
    this.stack = stack;
  }


  /**
   * Return true if this responseExtraInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseExtraInfo responseExtraInfo = (ResponseExtraInfo) o;
    return Objects.equals(this.requestId, responseExtraInfo.requestId) &&
        Objects.equals(this.resource, responseExtraInfo.resource) &&
        Objects.equals(this.source, responseExtraInfo.source) &&
        Objects.equals(this.execTimeMs, responseExtraInfo.execTimeMs) &&
        Objects.equals(this.statusCode, responseExtraInfo.statusCode) &&
        Objects.equals(this.isFunctionError, responseExtraInfo.isFunctionError) &&
        Objects.equals(this.stack, responseExtraInfo.stack);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, resource, source, execTimeMs, statusCode, isFunctionError, stack);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseExtraInfo {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    execTimeMs: ").append(toIndentedString(execTimeMs)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    isFunctionError: ").append(toIndentedString(isFunctionError)).append("\n");
    sb.append("    stack: ").append(toIndentedString(stack)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

