/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.salesforce.functions.context;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Salesforce Function invocation context information
 */
@ApiModel(description = "Salesforce Function invocation context information")
@JsonPropertyOrder({
  SfFnContext.JSON_PROPERTY_ACCESS_TOKEN,
  SfFnContext.JSON_PROPERTY_FUNCTION_INVOCATION_ID,
  SfFnContext.JSON_PROPERTY_PROXY_CLIENT_TOKEN,
  SfFnContext.JSON_PROPERTY_FUNCTION_NAME,
  SfFnContext.JSON_PROPERTY_APEX_ID,
  SfFnContext.JSON_PROPERTY_APEX_F_Q_N,
  SfFnContext.JSON_PROPERTY_REQUEST_ID,
  SfFnContext.JSON_PROPERTY_RESOURCE,
  SfFnContext.JSON_PROPERTY_ASYNC_RESPONSE_CALLBACK_PATH,
  SfFnContext.JSON_PROPERTY_DEADLINE,
  SfFnContext.JSON_PROPERTY_FUNCTION_NAMESPACE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SfFnContext {
  public static final String JSON_PROPERTY_ACCESS_TOKEN = "accessToken";
  private String accessToken;

  public static final String JSON_PROPERTY_FUNCTION_INVOCATION_ID = "functionInvocationId";
  private String functionInvocationId;

  public static final String JSON_PROPERTY_PROXY_CLIENT_TOKEN = "proxyClientToken";
  private String proxyClientToken;

  public static final String JSON_PROPERTY_FUNCTION_NAME = "functionName";
  private String functionName;

  public static final String JSON_PROPERTY_APEX_ID = "apexId";
  private String apexId;

  public static final String JSON_PROPERTY_APEX_F_Q_N = "apexFQN";
  private String apexFQN;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private String resource;

  public static final String JSON_PROPERTY_ASYNC_RESPONSE_CALLBACK_PATH = "asyncResponseCallbackPath";
  private String asyncResponseCallbackPath;

  public static final String JSON_PROPERTY_DEADLINE = "deadline";
  private OffsetDateTime deadline;

  public static final String JSON_PROPERTY_FUNCTION_NAMESPACE = "functionNamespace";
  private String functionNamespace;

  public SfFnContext() { 
  }

  public SfFnContext accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * In-band access token to use for local Functions testing, not populated in production calls
   * @return accessToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "In-band access token to use for local Functions testing, not populated in production calls")
  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccessToken() {
    return accessToken;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }


  public SfFnContext functionInvocationId(String functionInvocationId) {
    this.functionInvocationId = functionInvocationId;
    return this;
  }

   /**
   * Unique function invocation identifier, only populated for async function invocations
   * @return functionInvocationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique function invocation identifier, only populated for async function invocations")
  @JsonProperty(JSON_PROPERTY_FUNCTION_INVOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunctionInvocationId() {
    return functionInvocationId;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION_INVOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunctionInvocationId(String functionInvocationId) {
    this.functionInvocationId = functionInvocationId;
  }


  public SfFnContext proxyClientToken(String proxyClientToken) {
    this.proxyClientToken = proxyClientToken;
    return this;
  }

   /**
   * (internal use only)
   * @return proxyClientToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(internal use only)")
  @JsonProperty(JSON_PROPERTY_PROXY_CLIENT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProxyClientToken() {
    return proxyClientToken;
  }


  @JsonProperty(JSON_PROPERTY_PROXY_CLIENT_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProxyClientToken(String proxyClientToken) {
    this.proxyClientToken = proxyClientToken;
  }


  public SfFnContext functionName(String functionName) {
    this.functionName = functionName;
    return this;
  }

   /**
   * Qualified function name in the form &lt;project&gt;.&lt;fnname&gt; or &lt;namespace&gt;.&lt;project&gt;.&lt;fnname&gt;
   * @return functionName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Qualified function name in the form <project>.<fnname> or <namespace>.<project>.<fnname>")
  @JsonProperty(JSON_PROPERTY_FUNCTION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFunctionName() {
    return functionName;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFunctionName(String functionName) {
    this.functionName = functionName;
  }


  public SfFnContext apexId(String apexId) {
    this.apexId = apexId;
    return this;
  }

   /**
   * Unique Apex class identifier that invoked this function
   * @return apexId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique Apex class identifier that invoked this function")
  @JsonProperty(JSON_PROPERTY_APEX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApexId() {
    return apexId;
  }


  @JsonProperty(JSON_PROPERTY_APEX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApexId(String apexId) {
    this.apexId = apexId;
  }


  public SfFnContext apexFQN(String apexFQN) {
    this.apexFQN = apexFQN;
    return this;
  }

   /**
   * Apex qualified name that invoked this function in the form Pathname/filename.cls:linenum
   * @return apexFQN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Apex qualified name that invoked this function in the form Pathname/filename.cls:linenum")
  @JsonProperty(JSON_PROPERTY_APEX_F_Q_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApexFQN() {
    return apexFQN;
  }


  @JsonProperty(JSON_PROPERTY_APEX_F_Q_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApexFQN(String apexFQN) {
    this.apexFQN = apexFQN;
  }


  public SfFnContext requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Unique function request identifier
   * @return requestId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unique function request identifier")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public SfFnContext resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Resource identifier of function being invoked
   * @return resource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Resource identifier of function being invoked")
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResource() {
    return resource;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResource(String resource) {
    this.resource = resource;
  }


  public SfFnContext asyncResponseCallbackPath(String asyncResponseCallbackPath) {
    this.asyncResponseCallbackPath = asyncResponseCallbackPath;
    return this;
  }

   /**
   * (internal use only)
   * @return asyncResponseCallbackPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(internal use only)")
  @JsonProperty(JSON_PROPERTY_ASYNC_RESPONSE_CALLBACK_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAsyncResponseCallbackPath() {
    return asyncResponseCallbackPath;
  }


  @JsonProperty(JSON_PROPERTY_ASYNC_RESPONSE_CALLBACK_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAsyncResponseCallbackPath(String asyncResponseCallbackPath) {
    this.asyncResponseCallbackPath = asyncResponseCallbackPath;
  }


  public SfFnContext deadline(OffsetDateTime deadline) {
    this.deadline = deadline;
    return this;
  }

   /**
   * Deadline datetime (UTC) prior to which the Function request must complete: yyyy-MM-dd&#39;T&#39;HH:mm:ssZ
   * @return deadline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-31T23:19:01Z", value = "Deadline datetime (UTC) prior to which the Function request must complete: yyyy-MM-dd'T'HH:mm:ssZ")
  @JsonProperty(JSON_PROPERTY_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeadline() {
    return deadline;
  }


  @JsonProperty(JSON_PROPERTY_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeadline(OffsetDateTime deadline) {
    this.deadline = deadline;
  }


  public SfFnContext functionNamespace(String functionNamespace) {
    this.functionNamespace = functionNamespace;
    return this;
  }

   /**
   * Optional Namespace prefix for the functions
   * @return functionNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional Namespace prefix for the functions")
  @JsonProperty(JSON_PROPERTY_FUNCTION_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunctionNamespace() {
    return functionNamespace;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTION_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunctionNamespace(String functionNamespace) {
    this.functionNamespace = functionNamespace;
  }


  /**
   * Return true if this sfFnContext object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SfFnContext sfFnContext = (SfFnContext) o;
    return Objects.equals(this.accessToken, sfFnContext.accessToken) &&
        Objects.equals(this.functionInvocationId, sfFnContext.functionInvocationId) &&
        Objects.equals(this.proxyClientToken, sfFnContext.proxyClientToken) &&
        Objects.equals(this.functionName, sfFnContext.functionName) &&
        Objects.equals(this.apexId, sfFnContext.apexId) &&
        Objects.equals(this.apexFQN, sfFnContext.apexFQN) &&
        Objects.equals(this.requestId, sfFnContext.requestId) &&
        Objects.equals(this.resource, sfFnContext.resource) &&
        Objects.equals(this.asyncResponseCallbackPath, sfFnContext.asyncResponseCallbackPath) &&
        Objects.equals(this.deadline, sfFnContext.deadline) &&
        Objects.equals(this.functionNamespace, sfFnContext.functionNamespace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, functionInvocationId, proxyClientToken, functionName, apexId, apexFQN, requestId, resource, asyncResponseCallbackPath, deadline, functionNamespace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SfFnContext {\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    functionInvocationId: ").append(toIndentedString(functionInvocationId)).append("\n");
    sb.append("    proxyClientToken: ").append(toIndentedString(proxyClientToken)).append("\n");
    sb.append("    functionName: ").append(toIndentedString(functionName)).append("\n");
    sb.append("    apexId: ").append(toIndentedString(apexId)).append("\n");
    sb.append("    apexFQN: ").append(toIndentedString(apexFQN)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    asyncResponseCallbackPath: ").append(toIndentedString(asyncResponseCallbackPath)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    functionNamespace: ").append(toIndentedString(functionNamespace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

