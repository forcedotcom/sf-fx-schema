/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sffxschema

import (
	"encoding/json"
)

// ResponseExtraInfo Extra response out-of-band information returned from function invocation
type ResponseExtraInfo struct {
	// Unique function request identifier
	RequestId string `json:"requestId"`
	// Resource identifier of function being invoked
	Resource *string `json:"resource,omitempty"`
	// Source path:line number if possible to fill in on error, null/undefined otherwise
	Source *string `json:"source,omitempty"`
	// Execution time in milliseconds, may include fractional millis after decimal point
	ExecTimeMs *float32 `json:"execTimeMs,omitempty"`
	// HTTP status code of response: 200-599, -1 if non-HTTP error encountered.
	StatusCode *int32 `json:"statusCode,omitempty"`
	// Flag set to true if error encountered in function code, false if other error, null/undefined if no error
	IsFunctionError *bool `json:"isFunctionError,omitempty"`
	// Language-specific error stack trace to help developer diagnose issues, null/undefined if no error
	Stack *string `json:"stack,omitempty"`
}

// NewResponseExtraInfo instantiates a new ResponseExtraInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseExtraInfo(requestId string) *ResponseExtraInfo {
	this := ResponseExtraInfo{}
	this.RequestId = requestId
	return &this
}

// NewResponseExtraInfoWithDefaults instantiates a new ResponseExtraInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseExtraInfoWithDefaults() *ResponseExtraInfo {
	this := ResponseExtraInfo{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *ResponseExtraInfo) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ResponseExtraInfo) GetRequestIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ResponseExtraInfo) SetRequestId(v string) {
	o.RequestId = v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *ResponseExtraInfo) GetResource() string {
	if o == nil || o.Resource == nil {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseExtraInfo) GetResourceOk() (*string, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *ResponseExtraInfo) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *ResponseExtraInfo) SetResource(v string) {
	o.Resource = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ResponseExtraInfo) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseExtraInfo) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ResponseExtraInfo) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ResponseExtraInfo) SetSource(v string) {
	o.Source = &v
}

// GetExecTimeMs returns the ExecTimeMs field value if set, zero value otherwise.
func (o *ResponseExtraInfo) GetExecTimeMs() float32 {
	if o == nil || o.ExecTimeMs == nil {
		var ret float32
		return ret
	}
	return *o.ExecTimeMs
}

// GetExecTimeMsOk returns a tuple with the ExecTimeMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseExtraInfo) GetExecTimeMsOk() (*float32, bool) {
	if o == nil || o.ExecTimeMs == nil {
		return nil, false
	}
	return o.ExecTimeMs, true
}

// HasExecTimeMs returns a boolean if a field has been set.
func (o *ResponseExtraInfo) HasExecTimeMs() bool {
	if o != nil && o.ExecTimeMs != nil {
		return true
	}

	return false
}

// SetExecTimeMs gets a reference to the given float32 and assigns it to the ExecTimeMs field.
func (o *ResponseExtraInfo) SetExecTimeMs(v float32) {
	o.ExecTimeMs = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *ResponseExtraInfo) GetStatusCode() int32 {
	if o == nil || o.StatusCode == nil {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseExtraInfo) GetStatusCodeOk() (*int32, bool) {
	if o == nil || o.StatusCode == nil {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *ResponseExtraInfo) HasStatusCode() bool {
	if o != nil && o.StatusCode != nil {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *ResponseExtraInfo) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetIsFunctionError returns the IsFunctionError field value if set, zero value otherwise.
func (o *ResponseExtraInfo) GetIsFunctionError() bool {
	if o == nil || o.IsFunctionError == nil {
		var ret bool
		return ret
	}
	return *o.IsFunctionError
}

// GetIsFunctionErrorOk returns a tuple with the IsFunctionError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseExtraInfo) GetIsFunctionErrorOk() (*bool, bool) {
	if o == nil || o.IsFunctionError == nil {
		return nil, false
	}
	return o.IsFunctionError, true
}

// HasIsFunctionError returns a boolean if a field has been set.
func (o *ResponseExtraInfo) HasIsFunctionError() bool {
	if o != nil && o.IsFunctionError != nil {
		return true
	}

	return false
}

// SetIsFunctionError gets a reference to the given bool and assigns it to the IsFunctionError field.
func (o *ResponseExtraInfo) SetIsFunctionError(v bool) {
	o.IsFunctionError = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *ResponseExtraInfo) GetStack() string {
	if o == nil || o.Stack == nil {
		var ret string
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseExtraInfo) GetStackOk() (*string, bool) {
	if o == nil || o.Stack == nil {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *ResponseExtraInfo) HasStack() bool {
	if o != nil && o.Stack != nil {
		return true
	}

	return false
}

// SetStack gets a reference to the given string and assigns it to the Stack field.
func (o *ResponseExtraInfo) SetStack(v string) {
	o.Stack = &v
}

func (o ResponseExtraInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["requestId"] = o.RequestId
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.ExecTimeMs != nil {
		toSerialize["execTimeMs"] = o.ExecTimeMs
	}
	if o.StatusCode != nil {
		toSerialize["statusCode"] = o.StatusCode
	}
	if o.IsFunctionError != nil {
		toSerialize["isFunctionError"] = o.IsFunctionError
	}
	if o.Stack != nil {
		toSerialize["stack"] = o.Stack
	}
	return json.Marshal(toSerialize)
}

type NullableResponseExtraInfo struct {
	value *ResponseExtraInfo
	isSet bool
}

func (v NullableResponseExtraInfo) Get() *ResponseExtraInfo {
	return v.value
}

func (v *NullableResponseExtraInfo) Set(val *ResponseExtraInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseExtraInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseExtraInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseExtraInfo(val *ResponseExtraInfo) *NullableResponseExtraInfo {
	return &NullableResponseExtraInfo{value: val, isSet: true}
}

func (v NullableResponseExtraInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseExtraInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


