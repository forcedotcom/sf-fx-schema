<project>
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.salesforce.functions</groupId>
    <artifactId>sf-fx-schema</artifactId>
    <version>1.0.0</version>
    <relativePath>..</relativePath>
  </parent>
  <artifactId>sf-fx-schema-node</artifactId>
  <packaging>pom</packaging>
  <name>com.salesforce.functions:sf-fx-schema-node</name>

  <properties>
    <gen-nodedir>${project.build.directory}/generated-sources/openapi</gen-nodedir>
  </properties>

  <dependencies>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>clean-node</id>
            <phase>clean</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete dir="${project.basedir}/node_modules" />
                <delete dir="${project.basedir}/dist" />
                <delete dir="${project.basedir}/types" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>build-node</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${project.basedir}/dist"/>
                <exec executable="npm" dir="${project.basedir}" failonerror="true">
                  <arg value="install" />
                </exec>
                <exec executable="npm" dir="${project.basedir}" failonerror="true">
                  <arg value="run" />
                  <arg value="build" />
                </exec>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>test-node</id>
            <phase>test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <exec executable="npm" dir="${project.basedir}" failonerror="true">
                  <arg value="run" />
                  <arg value="test" />
                </exec>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>package-node</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <exec executable="npm" dir="${project.basedir}" failonerror="true">
                  <arg value="pack" />
                </exec>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>codegen</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>gen-node-openapi</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <inputSpec>${project.parent.basedir}/schema.json</inputSpec>
                  <output>${gen-nodedir}</output>
                  <generatorName>typescript-node</generatorName>
                  <disallowAdditionalPropertiesIfNotPresent>false</disallowAdditionalPropertiesIfNotPresent>
                  <supportsES6>true</supportsES6>
                  <templateDirectory>${basedir}/custom_template</templateDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>gen-node-openapi-clean</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <delete>
                      <fileset dir="${gen-nodedir}">
                        <include name="api.ts" />
                        <include name="api/*.ts" />
                        <include name="model/models.ts" />
                      </fileset>
                    </delete>
                    <replaceregexp byline="true" encoding="UTF-8" match="import.*RequestFile.*;" replace="">
                      <fileset dir="${gen-nodedir}/model" includes="*.ts" />
                    </replaceregexp>
                    <move todir="${project.basedir}/src">
                      <fileset dir="${gen-nodedir}/model" includes="*.ts" />
                    </move>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>cibuild</id>
      <build>
      </build>
    </profile>
  </profiles>

</project>
